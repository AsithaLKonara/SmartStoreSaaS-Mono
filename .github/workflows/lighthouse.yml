name: Lighthouse CI

on:
  pull_request:
    branches: [main, master, develop]
  push:
    branches: [main, master]

jobs:
  lighthouse:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build application
        run: npm run build
        env:
          NODE_ENV: production

      - name: Run Lighthouse CI
        run: |
          npm install -g @lhci/cli@0.13.x
          lhci autorun
        env:
          LHCI_GITHUB_APP_TOKEN: ${{ secrets.LHCI_GITHUB_APP_TOKEN }}

      - name: Upload Lighthouse results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lighthouse-results
          path: .lighthouseci

      - name: Comment PR with Lighthouse scores
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            const fs = require('fs');
            const results = JSON.parse(fs.readFileSync('.lighthouseci/manifest.json', 'utf8'));
            
            let comment = '## ðŸ”¦ Lighthouse CI Results\n\n';
            comment += '| Category | Score |\n';
            comment += '|----------|-------|\n';
            
            if (results && results.length > 0) {
              const report = results[0];
              comment += `| Performance | ${Math.round(report.summary.performance * 100)}% |\n`;
              comment += `| Accessibility | ${Math.round(report.summary.accessibility * 100)}% |\n`;
              comment += `| Best Practices | ${Math.round(report.summary['best-practices'] * 100)}% |\n`;
              comment += `| SEO | ${Math.round(report.summary.seo * 100)}% |\n`;
            }
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });



